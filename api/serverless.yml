org: jjohnson1994
app: climbing-topos
service: climbing-topos

plugins:
  - serverless-dotenv-plugin
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline
  - serverless-offline-sns
  - serverless-offline-dynamodb-streams
custom:
  tableName: 'climbing_topos'
  serverless-offline:
    httpPort: 3001
  webpack:
    webpackConfig: 'webpack.config.js'
  dynamodb:
    stages: dev
    start:
      migrate: true
  serverless-offline-dynamodb-streams:
    apiVersion: '2013-12-02'
    endpoint: http://0.0.0.0:8000
    region: ${env:AWS_REGION}
    accessKeyId: root
    secretAccessKey: root
    skipCacheInvalidation: false
    readInterval: 500
  serverless-offline-sns:
    port: 4002
    debug: true

package:
  individually: true

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "*"
  environment:
    DB: ${self:custom.tableName}
    NODE_ENV: ${env:NODE_ENV}
    ALGOLIA_ADMIN_KEY: ${env:ALGOLIA_ADMIN_KEY}
    ALGOLIA_APP_ID: ${env:ALGOLIA_APP_ID}
    ALGOLIA_INDEX: ${env:ALGOLIA_INDEX}
    AUTH0_AUDIENCE: ${env:AUTH0_AUDIENCE}
    AUTH0_DOMAIN: ${env:AUTH0_DOMAIN}
    AWS_REGION: ${env:AWS_REGION}
    AWS_ACCOUNT_ID: ${env:AWS_ACCOUNT_ID}

functions:
  app:
    handler: index.handler
    events:
      - http:
          method: ANY
          path: /
          cors: true
      - http:
          method: ANY
          path: '{proxy+}'
          cors: true
  stream:
    handler: functions/stream/stream.handler
    events:
      - stream:
          enabled: true
          type: dynamodb
          batchSize: 1
          startingPosition: TRIM_HORIZON
          arn:
            Fn::GetAtt:
              - DynamoDBClimbingTopos
              - StreamArn
  areaOnInsert:
    handler: functions/area/areaOnInsert.handler
    events:
      - sns: area_insert
  cragOnInsert:
    handler: functions/crag/cragOnInsert.handler
    events:
      - sns: crag_insert

resources:
  Resources:
    DynamoDBClimbingTopos:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        ProvisionedThroughput:
          ReadCapacityUnits: 20
          WriteCapacityUnits: 20
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        AttributeDefinitions:
          - AttributeName: hk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: model
            AttributeType: S
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: hk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: gsi1
            KeySchema:
              - AttributeName: model
                KeyType: HASH
              - AttributeName: sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5
          - IndexName: gsi2
            KeySchema:
              - AttributeName: model
                KeyType: HASH
              - AttributeName: slug
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5
