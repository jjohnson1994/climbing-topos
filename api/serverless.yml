org: jjohnson1994
app: climbing-topos
service: climbing-topos

plugins:
  - serverless-webpack
  - serverless-dynamodb-local
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3001
  tableName: 'climbing_topos_${self:provider.stage}'
  webpack:
    webpackConfig: 'webpack.config.js'
  dynamodb:
    stages: dev
    start:
      migrate: true

package:
  individually: true

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["DynamoDBClimbingTopos", "Arn" ] }
  environment:
    DB: ${self:custom.tableName}

functions:
  app:
    handler: index.handler
    events:
      - http: ANY /
      - http: 'ANY {proxy+}'
  cragsGet:
    handler: index.handler
    events:
      - http: 'GET /crags/{proxy+}'
  cragsPost:
    handler: index.handler
    events:
      - http: 'POST /crags/{proxy+}'

resources:
  Resources:
    DynamoDBClimbingTopos:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:custom.tableName}
        ProvisionedThroughput:
          ReadCapacityUnits: 20
          WriteCapacityUnits: 20
        AttributeDefinitions:
          - AttributeName: hk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: model
            AttributeType: S
        KeySchema:
          - AttributeName: hk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: gsi1
            KeySchema:
              - AttributeName: model
                KeyType: HASH
              - AttributeName: sk
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
                ReadCapacityUnits: 5
                WriteCapacityUnits: 5
    CognitoUserPool:
      Type: 'AWS::Cognito::UserPool'
