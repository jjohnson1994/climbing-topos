[{"/Users/jamesjohnson/Projects/climbing-topos/app/src/index.js":"1","/Users/jamesjohnson/Projects/climbing-topos/app/src/reportWebVitals.js":"2","/Users/jamesjohnson/Projects/climbing-topos/app/src/App.tsx":"3","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/Nav.tsx":"4","/Users/jamesjohnson/Projects/climbing-topos/app/src/auth/auth0-provider-with-history.tsx":"5","/Users/jamesjohnson/Projects/climbing-topos/app/src/auth/protected-route.tsx":"6","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/area/Area.tsx":"7","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/crag/Crag.tsx":"8","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/crags/Crags.tsx":"9","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-area/CreateArea.tsx":"10","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-crag/CreateCrag.tsx":"11","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-route/CreateRoute.tsx":"12","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-topo/CreateTopo.tsx":"13","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/home/Home.tsx":"14","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/profile/Profile.tsx":"15","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/route/Route.tsx":"16","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/logs.ts":"17","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/crags.ts":"18","/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/alerts.ts":"19","/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/clipboard.ts":"20","/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/pageTitle.ts":"21","/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/geolocation.ts":"22","/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/nominatim.ts":"23","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/ButtonCopyCoordinates.tsx":"24","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/AreaRoutesTable.tsx":"25","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/LoadingSpinner.tsx":"26","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/RoutesAddToLogModal.tsx":"27","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/TopoImage.tsx":"28","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/TopoCanvas.tsx":"29","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/ProfileLogs.tsx":"30","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/index.ts":"31","/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/queryString.ts":"32","/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/svg.ts":"33","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/Modal.tsx":"34","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/TopoImageStartTag.tsx":"35","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/areas.ts":"36","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/globals.ts":"37","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/topos.ts":"38","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/uploads.ts":"39","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/routes.ts":"40"},{"size":500,"mtime":1610219466488,"results":"41","hashOfConfig":"42"},{"size":362,"mtime":1610219466497,"results":"43","hashOfConfig":"42"},{"size":2161,"mtime":1610219466459,"results":"44","hashOfConfig":"42"},{"size":2204,"mtime":1610219466471,"results":"45","hashOfConfig":"42"},{"size":859,"mtime":1610219466465,"results":"46","hashOfConfig":"42"},{"size":330,"mtime":1610219466466,"results":"47","hashOfConfig":"42"},{"size":7391,"mtime":1610364068973,"results":"48","hashOfConfig":"42"},{"size":9748,"mtime":1610365845757,"results":"49","hashOfConfig":"42"},{"size":3272,"mtime":1610270898878,"results":"50","hashOfConfig":"42"},{"size":8633,"mtime":1610365120354,"results":"51","hashOfConfig":"42"},{"size":14244,"mtime":1610302592002,"results":"52","hashOfConfig":"42"},{"size":9120,"mtime":1610364732880,"results":"53","hashOfConfig":"42"},{"size":4953,"mtime":1610356859836,"results":"54","hashOfConfig":"42"},{"size":1682,"mtime":1610219466493,"results":"55","hashOfConfig":"42"},{"size":753,"mtime":1610219466495,"results":"56","hashOfConfig":"42"},{"size":4765,"mtime":1610270898882,"results":"57","hashOfConfig":"42"},{"size":2535,"mtime":1610279504733,"results":"58","hashOfConfig":"42"},{"size":1184,"mtime":1610366787485,"results":"59","hashOfConfig":"42"},{"size":1505,"mtime":1610219466477,"results":"60","hashOfConfig":"42"},{"size":99,"mtime":1610219466477,"results":"61","hashOfConfig":"42"},{"size":277,"mtime":1610219466480,"results":"62","hashOfConfig":"42"},{"size":369,"mtime":1610275063708,"results":"63","hashOfConfig":"42"},{"size":342,"mtime":1610219466479,"results":"64","hashOfConfig":"42"},{"size":966,"mtime":1610357269715,"results":"65","hashOfConfig":"42"},{"size":4329,"mtime":1610365766307,"results":"66","hashOfConfig":"42"},{"size":227,"mtime":1610219466469,"results":"67","hashOfConfig":"42"},{"size":10317,"mtime":1610366772031,"results":"68","hashOfConfig":"42"},{"size":3856,"mtime":1610363342776,"results":"69","hashOfConfig":"42"},{"size":7764,"mtime":1610270898874,"results":"70","hashOfConfig":"42"},{"size":1462,"mtime":1610366768132,"results":"71","hashOfConfig":"42"},{"size":246,"mtime":1610219466462,"results":"72","hashOfConfig":"42"},{"size":261,"mtime":1610219466486,"results":"73","hashOfConfig":"42"},{"size":1701,"mtime":1610219466487,"results":"74","hashOfConfig":"42"},{"size":1609,"mtime":1610219466470,"results":"75","hashOfConfig":"42"},{"size":1190,"mtime":1610219466476,"results":"76","hashOfConfig":"42"},{"size":851,"mtime":1610365177004,"results":"77","hashOfConfig":"42"},{"size":493,"mtime":1610278021922,"results":"78","hashOfConfig":"42"},{"size":1510,"mtime":1610356890305,"results":"79","hashOfConfig":"42"},{"size":313,"mtime":1610219466464,"results":"80","hashOfConfig":"42"},{"size":1041,"mtime":1610270898866,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},"8wh8os",{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"89"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"89"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"/Users/jamesjohnson/Projects/climbing-topos/app/src/index.js",[],["169","170"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/reportWebVitals.js",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/App.tsx",[],["171","172"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/Nav.tsx",["173"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\n\nfunction Nav() {\n  const [navBarMenuClass, setNavBarMenuClass] = useState(\"\");\n  const { isAuthenticated, loginWithRedirect } = useAuth0();\n\n  const btnBurgerMenuOnClick = () => {\n    if (navBarMenuClass === \"is-active\") {\n      setNavBarMenuClass(\"\");\n    } else {\n      setNavBarMenuClass(\"is-active\");\n    }\n  };\n\n  return (\n    <nav className=\"navbar has-shadow\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"navbar-brand\">\n        <Link className=\"navbar-item has-text-weight-medium\" to=\"/\">\n          ClimbingTopos.com\n        </Link>\n\n        <a\n          className=\"navbar-burger burger\"\n          aria-label=\"menu\"\n          aria-expanded=\"false\"\n          data-target=\"navbarBasicExample\"\n          onClick={ btnBurgerMenuOnClick }\n        >\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n          <span aria-hidden=\"true\"></span>\n        </a>\n      </div>\n\n      <div\n        id=\"navbarBasicExample\"\n        className={`navbar-menu ${navBarMenuClass}`}\n      >\n        <div className=\"navbar-start\">\n          <Link\n            className=\"navbar-item\"\n            to=\"/crags\"\n          >\n            Crags\n          </Link>\n          <Link\n            className=\"navbar-item\"\n            to=\"/crags-map\"\n          >\n            Map\n          </Link>\n        </div>\n\n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n          { isAuthenticated \n            ? <Link to=\"/profile\">\n                <button className=\"button\">\n                  <span className=\"icon\">\n                    <i className=\"fas fa-user\"></i>\n                  </span>\n                  <span>Profile</span>\n                </button>\n              </Link>\n            : <button className=\"button\" onClick={ loginWithRedirect }>\n                <span className=\"icon\">\n                  <i className=\"fas fa-user\"></i>\n                </span>\n                <span>Login</span>\n              </button>\n          }\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","/Users/jamesjohnson/Projects/climbing-topos/app/src/auth/auth0-provider-with-history.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/auth/protected-route.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/area/Area.tsx",["174","175"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/crag/Crag.tsx",["176","177","178","179","180"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/crags/Crags.tsx",["181","182"],"import React, { useEffect, useState } from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { Link } from 'react-router-dom';\n\nimport CragQuickActions from \"../../components/CragQuickActions\";\nimport { getCrags } from \"../../api/crags\";\nimport { CragView } from '../../../../core/types';\nimport LoadingSpinner from '../../components/LoadingSpinner';\n\nfunction Crags() {\n  const [crags, setCrags] = useState<CragView[]>([]);\n  const [loading, setLoading] = useState(false);\n  const { isAuthenticated, isLoading, getAccessTokenSilently } = useAuth0();\n\n  useEffect(() => {\n    if (isLoading === false) {\n      doGetCrags();\n    }\n  }, [isLoading, isAuthenticated]);\n\n  async function doGetCrags() {\n    try {\n      setLoading(true);\n      const token = isAuthenticated\n        ? await getAccessTokenSilently()\n        : \"\";\n      const crags = await getCrags(token).then(crags => crags.sort((cragA, cragB) => cragA.title > cragB.title ? 1 : -1));\n      setCrags(crags);\n    } catch (error) {\n      console.error('Error loading crags', error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">Find a Crag</h1>\n          <div className=\"field is-grouped\">\n            <div className=\"control is-expanded has-icons-left\">\n              <span className=\"icon is-icon-left\">\n                <i className=\"fas fa-search\"></i>\n              </span>\n              <input\n                className=\"input is-rounded\"\n                type=\"text\"\n                placeholder=\"Search\"\n              />\n            </div>\n            <div className=\"control\">\n              <Link to=\"/create-crag\" className=\"button is-rounded\">\n                <span className=\"icon is-small\">\n                  <i className=\"fas fa-plus\"></i>\n                </span>\n                <span>Add Crag</span>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <table className=\"table is-hoverable is-fullwidth\">\n              <thead>\n                <tr>\n                  <td>Crag</td>\n                  <td>Routes</td>\n                  <td>Areas</td>\n                  <td>Ticks</td>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  crags.map(crag => (\n                    <tr key={ crag.slug }>\n                      <td>\n                        <Link \n                          className=\"is-capitalized\"\n                          to={`/crags/${crag.slug}`}\n                        >\n                          { crag.title }\n                        </Link>\n                      </td>\n                      <td><span>{ crag.routes.length }</span></td>\n                      <td><span>{ crag.areas.length } </span></td>\n                      <td><span>{ crag.logsCount }</span></td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n              { loading && <LoadingSpinner /> }\n            </table>\n          </div>\n        </div>\n      </section>\n    </React.Fragment>\n  )\n}\n\nexport default Crags;\n","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-area/CreateArea.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-crag/CreateCrag.tsx",["183"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-route/CreateRoute.tsx",["184"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/create-topo/CreateTopo.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/home/Home.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/profile/Profile.tsx",["185","186","187"],"import React, { useEffect, useState } from \"react\";\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport ProfileLogs from \"../../components/ProfileLogs\";\n\nfunction Profile() {\n  const { logout, user } = useAuth0();\n  const { name, picture, email } = user;\n\n  return (\n    <>\n      <section className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1>{ name }</h1>\n            <img src={ picture } />\n            <h1>{ email }</h1>\n            <button className=\"button\" onClick={ () => logout() }>\n              Logout\n            </button>\n          </div>\n          <div className=\"box\">\n            <ProfileLogs />\n          </div>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default Profile;\n","/Users/jamesjohnson/Projects/climbing-topos/app/src/pages/route/Route.tsx",["188","189"],"import {useAuth0} from \"@auth0/auth0-react\";\nimport React, {useEffect, useState} from \"react\";\nimport {useParams} from \"react-router-dom\";\nimport {Route, RouteView} from \"../../../../core/types\";\nimport {routes} from \"../../api\";\nimport RoutesAddToLogModal from \"../../components/RoutesAddToLogModal\";\nimport TopoImage from \"../../components/TopoImage\";\nimport {popupError} from \"../../helpers/alerts\";\nimport {usePageTitle} from \"../../helpers/pageTitle\";\n\n\nfunction RoutePage() {\n  const { getAccessTokenSilently, isAuthenticated, isLoading, loginWithRedirect } = useAuth0();\n  const { cragSlug, areaSlug, topoSlug, routeSlug } = useParams<{ cragSlug: string; areaSlug: string; topoSlug: string; routeSlug: string }>();\n  const [route, setRoute] = useState<RouteView>();\n  const [routeJustLogged, setRouteJustLogged] = useState<Boolean>(false); \n  const [showLogModal, setShowLogModal] = useState(false);\n  usePageTitle(route?.title);\n\n  useEffect(() => {\n    const doGetRoute = async () => {\n      try {\n        const token = isAuthenticated\n          ? await getAccessTokenSilently()\n          : \"\";\n        const newRoute = await routes.getRoute(token, cragSlug, areaSlug, topoSlug, routeSlug);\n        setRoute(newRoute);\n      } catch (error) {\n        console.error(\"Error loading route\", error);\n        popupError(\"Oh dear, there was a problem loading this route\");\n      }\n    }\n\n    if (isLoading === false) {\n      doGetRoute();\n    }\n  }, [routeSlug, isAuthenticated, isLoading]);\n\n  const btnDoneOnClick = () => {\n    setShowLogModal(true);\n  }\n\n  const onRouteLogged = () => {\n    setShowLogModal(false);\n    setRouteJustLogged(true);\n  }\n\n  return (\n    <>\n      { route ? (\n        <RoutesAddToLogModal\n          routes={ [route] as Route[] }\n          visible={ showLogModal } \n          onCancel={ () => setShowLogModal(false) }\n          onConfirm={ onRouteLogged }\n        />\n        ) : \"\"\n      }\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title is-spaced is-capitalized\">{ route?.title }</h1>\n          <h5 className=\"subtitle\">\n            { route?.grade }\n            <span> </span>\n            { route?.routeType }\n          </h5>\n          <p>{ route?.description }</p>\n          <br />\n          <div className=\"columns\">\n            <div className=\"column\">\n              <div role=\"group\" className=\"tags\">\n                {route?.tags.map(tag => (\n                  <label key={ tag } className=\"tag is-primary\">\n                    { tag }\n                  </label>\n                ))} \n              </div>\n            </div>\n            <div className=\"column is-flex is-justified-end\">\n              <div className=\"field has-addons\">\n                <div className=\"control\">\n                  <button className=\"button is-rounded\" onClick={ btnDoneOnClick }>\n                    { route?.userLogs.length || routeJustLogged\n                      ? (\n                        <>\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fw fa-check\"></i>\n                          </span>\n                          <span>Done</span>\n                        </>\n                      )\n                      : (\n                        <>\n                          <span className=\"icon is-small\">\n                            <i className=\"fas fw fa-plus\"></i>\n                          </span>\n                          <span>Log Book</span>\n                        </>\n                      )\n                    }\n                  </button>\n                </div>\n                <div className=\"control\">\n                  <button className=\"button is-rounded\">\n                    <span className=\"icon is-small\">\n                      <i className=\"fas fw fa-list\"></i>\n                    </span>\n                    <span>Save to List</span>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <section className=\"is-hidden-tablet\">\n        { route?.drawing\n          ? <TopoImage\n              routes={[route, ...route.siblingRoutes]}\n              highlightedRouteSlug={ route.slug }\n              background={ `${route?.topo?.image}` }\n            />\n          : \"\"\n        }\n      </section>\n      <section className=\"section is-hidden-mobile\">\n        <div className=\"container box\">\n          { route?.drawing\n            ? <TopoImage\n                routes={[route, ...route.siblingRoutes]}\n                highlightedRouteSlug={ route.slug }\n                background={ `${route?.topo?.image}` }\n              />\n            : \"\"\n          }\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default RoutePage;\n","/Users/jamesjohnson/Projects/climbing-topos/app/src/api/logs.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/api/crags.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/alerts.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/clipboard.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/pageTitle.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/geolocation.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/nominatim.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/ButtonCopyCoordinates.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/AreaRoutesTable.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/LoadingSpinner.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/RoutesAddToLogModal.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/TopoImage.tsx",["190"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/TopoCanvas.tsx",["191"],"import React, {useEffect, useRef, useState} from \"react\";\nimport {Route} from \"../../../core/types\";\nimport { domToSvgPoint, ReducePath, SmoothPath } from \"../helpers/svg\";\nimport { RouteDrawing } from \"../../../core/types\";\n\nimport \"./TopoCanvas.css\";\n\nenum PointerState {\n  up = \"up\",\n  down = \"down\"\n}\n\nconst strokeColor = \"yellow\";\nconst strokeWidth = \"4\";\n\nfunction TopoCanvas({backgroundImageURL, onDrawingChanged, routes}: {backgroundImageURL: string; onDrawingChanged: Function, routes: Route[] | undefined}) {\n  const [finishXY, setFinishXY] = useState([-1, -1]);\n  const [linkFrom, setLinkFrom] = useState<{routeSlug: string; x: number; y: number;} | undefined>();\n  const [linkTo, setLinkTo] = useState<{routeSlug: string; x: number; y: number;} | undefined>();\n  const [pointerState, setPointerState] = useState<PointerState>(PointerState.up);\n  const [existingRoutes, setExistingRoutes] = useState<Map<string, number[][]>>(new Map());\n  const [routePath, setRoutePath] = useState<number[][]>();\n  const [completePath, setCompletePath] = useState<number[][]>([]);\n  const [routeDrawing, setRouteDrawing] = useState<RouteDrawing>();\n\n  const canvasElement = useRef<SVGSVGElement>(document.querySelector(\"svg\") as SVGSVGElement);\n\n  useEffect(() => {\n    if (routes) {\n      const newExistingRoutes = new Map(existingRoutes);\n\n      routes.forEach(route => {\n        const existingRouteCoordinatesArray = route.drawing?.path;\n\n        if (existingRouteCoordinatesArray) {\n          newExistingRoutes.set(`${route.slug}`, existingRouteCoordinatesArray);\n        }\n      });\n\n      setExistingRoutes(newExistingRoutes);\n    }\n  }, [routes]);\n\n  function findRouteUnderPointer(x: number, y: number): {x: number; y: number; parentRouteSlug: string} | undefined {\n    let parentRoute;\n\n    existingRoutes.forEach((pathPoints, routeSlug) => {\n      pathPoints.forEach(([x1, y1]) => {\n        if (Math.abs(x - x1) <= 5 && Math.abs(y - y1) <= 5) {\n          parentRoute = ({x: x1, y: y1, parentRouteSlug: routeSlug});\n        }\n      });\n    });\n\n    return parentRoute;\n  }\n\n  // TODO 99% the same as in TopoImage.tsx\n  function joinLinkedRoutes(\n    routePath: number[][],\n    linkFrom: { routeSlug: string, x: number; y: number } | undefined,\n    linkTo: { routeSlug: string; x: number; y: number } | undefined,\n    routes: Map<string, number[][]>\n  ) {\n    let joinedPathPoints: number[][] = [];\n\n    if (linkFrom) {\n      const linkFromPath = routes.get(linkFrom.routeSlug);\n      const joinIndex = linkFromPath?.findIndex(([x, y]) => {\n        return Math.abs(x - linkFrom.x) <= 5 && Math.abs(y - linkFrom.y) <= 5;\n      });\n      const slicedPath = linkFromPath!.slice(0, joinIndex);\n\n      joinedPathPoints = [...joinedPathPoints, ...slicedPath];\n    }\n\n    joinedPathPoints = [...joinedPathPoints, ...routePath];\n\n    if (linkTo) {\n      const linkToPath = routes.get(linkTo.routeSlug);\n      const joinIndex = linkToPath?.findIndex(([x, y]) => {\n        return Math.abs(x - linkTo.x) <= 5 && Math.abs(y - linkTo.y) <= 5;\n      });\n      const slicedPath = linkToPath!.slice(joinIndex);\n\n      joinedPathPoints = [...joinedPathPoints, ...slicedPath];\n    }\n\n    return joinedPathPoints;\n  }\n\n  function onPointerDown() {\n    setPointerState(PointerState.down);\n    setFinishXY([ -1, -1 ]);\n    setLinkTo(undefined);\n    setRoutePath(undefined);\n    setRouteDrawing({\n      path: [],\n      linkFrom,\n      linkTo\n    });\n  }\n\n  function onPointerUp() {\n    setPointerState(PointerState.up);\n    onDrawingChanged(routeDrawing);\n  }\n\n  function onPointerMove({clientX, clientY}: PointerEvent) {\n    if (pointerState === PointerState.down) {\n      onPointerDrag({clientX, clientY});\n      return;\n    }\n\n    const {x, y} = domToSvgPoint({x: clientX, y: clientY}, canvasElement.current);\n    const targetRoute = findRouteUnderPointer(x, y);\n\n    if (targetRoute && pointerState === PointerState.up) {\n      setLinkFrom({\n        x: Math.round(x * 100) / 100,\n        y: Math.round(y * 100) / 100,\n        routeSlug: targetRoute.parentRouteSlug\n      });\n    } else {\n      setLinkFrom(undefined);\n    }\n  }\n\n  function onPointerDrag({clientX, clientY}: {clientX: number, clientY: number}) {\n    const {x, y} = domToSvgPoint({x: clientX, y: clientY}, canvasElement.current);\n    const targetRoute = findRouteUnderPointer(x, y);\n\n    if (targetRoute && pointerState === PointerState.down) {\n      setLinkTo({\n        x,\n        y,\n        routeSlug: targetRoute.parentRouteSlug\n      });\n    } else {\n      setLinkTo(undefined);\n    }\n\n    setRoutePath(routePath\n      ? [...routePath, [x, y]]\n      : [[x, y]]\n    );\n\n    setRouteDrawing({\n      path: routePath || [],\n      linkFrom: routeDrawing?.linkFrom,\n      linkTo\n    });\n\n    if (routePath) {\n      const completePath = joinLinkedRoutes(\n        routePath,\n        routeDrawing?.linkFrom,\n        routeDrawing?.linkTo,\n        existingRoutes\n      );\n\n      setFinishXY(completePath.slice(-1)[0]);\n      setCompletePath(ReducePath(completePath));\n    }\n  }\n\n  return (\n    <>\n      <div className=\"notification is-primary\">\n        Make sure to draw route lines from <strong>start to finish</strong>\n      </div>\n      <div id=\"canvas-container\">\n        <img id=\"canvas-bg\" src={backgroundImageURL} alt=\"topo drawing canvas\" />\n        <div id=\"canvas\">\n          <svg\n            ref={canvasElement}\n            width=\"100%\"\n            height=\"100%\"\n            viewBox=\"0 0 1000 1000\"\n            onPointerUp={onPointerUp}\n            onPointerMove={e => onPointerMove(e as unknown as PointerEvent)}\n            onPointerDown={onPointerDown}\n          >\n            {existingRoutes && [...existingRoutes.keys()].map(key => (\n              <path\n                key={key}\n                d={SmoothPath(existingRoutes.get(key) as number[][])}\n                strokeWidth={strokeWidth}\n                stroke={strokeColor}\n                strokeOpacity={0.5}\n                fill=\"none\"\n              />\n            ))}\n            {routeDrawing?.path?.length && (\n              <path\n                d={SmoothPath(completePath)}\n                stroke={strokeColor}\n                strokeWidth={strokeWidth}\n                fill=\"none\"\n              />\n            )}\n            {finishXY[0] !== -1 && finishXY[1] !== -1 && routeDrawing?.path?.length && (\n              <foreignObject x={finishXY[0] - 15} y={finishXY[1] - 30} width=\"30px\" height=\"30px\">\n                <div style={{width: \"30px\", height: \"30px\", position: \"relative\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                  <div style={{background: \"rgba(0, 0, 0, 0.8)\", padding: \"5px\", borderRadius: \"50em\", position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0}}></div>\n                  <i style={{fontSize: \"1rem\", zIndex: 1, color: \"#fff\"}} className=\"fas fa-flag\"></i>\n                </div>\n              </foreignObject>\n            )}\n            {((linkFrom && pointerState === \"up\") || (linkTo && pointerState === \"down\")) && (\n              <foreignObject x={(pointerState === \"up\" ? linkFrom!.x : linkTo!.x) - 15} y={(pointerState === \"up\" ? linkFrom!.y : linkTo!.y) - 30} width=\"30px\" height=\"30px\">\n                <div style={{width: \"30px\", height: \"30px\", position: \"relative\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\n                  <div style={{background: \"rgba(0, 0, 0, 0.8)\", padding: \"5px\", borderRadius: \"50em\", position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0}}></div>\n                  <i style={{fontSize: \"1rem\", zIndex: 1, color: \"#fff\"}} className=\"fas fa-link\"></i>\n                </div>\n              </foreignObject>\n            )}\n          </svg>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default TopoCanvas;\n","/Users/jamesjohnson/Projects/climbing-topos/app/src/components/ProfileLogs.tsx",["192"],"/Users/jamesjohnson/Projects/climbing-topos/app/src/api/index.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/queryString.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/helpers/svg.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/Modal.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/components/TopoImageStartTag.tsx",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/api/areas.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/api/globals.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/api/topos.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/api/uploads.ts",[],"/Users/jamesjohnson/Projects/climbing-topos/app/src/api/routes.ts",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":24,"column":9,"nodeType":"199","endLine":30,"endColumn":10},{"ruleId":"200","severity":1,"message":"201","line":54,"column":6,"nodeType":"202","endLine":54,"endColumn":44,"suggestions":"203"},{"ruleId":"204","severity":1,"message":"205","line":56,"column":9,"nodeType":"206","messageId":"207","endLine":56,"endColumn":25},{"ruleId":"200","severity":1,"message":"201","line":53,"column":6,"nodeType":"202","endLine":53,"endColumn":44,"suggestions":"208"},{"ruleId":"197","severity":1,"message":"198","line":105,"column":19,"nodeType":"199","endLine":105,"endColumn":63},{"ruleId":"197","severity":1,"message":"198","line":108,"column":19,"nodeType":"199","endLine":108,"endColumn":62},{"ruleId":"197","severity":1,"message":"198","line":111,"column":19,"nodeType":"199","endLine":111,"endColumn":65},{"ruleId":"197","severity":1,"message":"198","line":114,"column":19,"nodeType":"199","endLine":114,"endColumn":60},{"ruleId":"204","severity":1,"message":"209","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":24},{"ruleId":"200","severity":1,"message":"210","line":19,"column":6,"nodeType":"202","endLine":19,"endColumn":34,"suggestions":"211"},{"ruleId":"204","severity":1,"message":"212","line":28,"column":19,"nodeType":"206","messageId":"207","endLine":28,"endColumn":29},{"ruleId":"200","severity":1,"message":"201","line":72,"column":6,"nodeType":"202","endLine":72,"endColumn":43,"suggestions":"213"},{"ruleId":"204","severity":1,"message":"214","line":1,"column":17,"nodeType":"206","messageId":"207","endLine":1,"endColumn":26},{"ruleId":"204","severity":1,"message":"215","line":1,"column":28,"nodeType":"206","messageId":"207","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"217","line":15,"column":13,"nodeType":"199","endLine":15,"endColumn":36},{"ruleId":"204","severity":1,"message":"218","line":13,"column":63,"nodeType":"206","messageId":"207","endLine":13,"endColumn":80},{"ruleId":"200","severity":1,"message":"219","line":37,"column":6,"nodeType":"202","endLine":37,"endColumn":45,"suggestions":"220"},{"ruleId":"200","severity":1,"message":"221","line":50,"column":6,"nodeType":"202","endLine":50,"endColumn":24,"suggestions":"222"},{"ruleId":"200","severity":1,"message":"223","line":42,"column":6,"nodeType":"202","endLine":42,"endColumn":14,"suggestions":"224"},{"ruleId":"200","severity":1,"message":"201","line":27,"column":6,"nodeType":"202","endLine":27,"endColumn":34,"suggestions":"225"},"no-native-reassign",["226"],"no-negated-in-lhs",["227"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAccessTokenSilently'. Either include it or remove the dependency array.","ArrayExpression",["228"],"@typescript-eslint/no-unused-vars","'btnCoordsOnClick' is assigned a value but never used.","Identifier","unusedVar",["229"],"'CragQuickActions' is defined but never used.","React Hook useEffect has a missing dependency: 'doGetCrags'. Either include it or remove the dependency array.",["230"],"'setLoading' is assigned a value but never used.",["231"],"'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'loginWithRedirect' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'areaSlug', 'cragSlug', 'getAccessTokenSilently', and 'topoSlug'. Either include them or remove the dependency array.",["232"],"React Hook useEffect has a missing dependency: 'routeLabels'. Either include it or remove the dependency array.",["233"],"React Hook useEffect has a missing dependency: 'existingRoutes'. Either include it or remove the dependency array.",["234"],["235"],"no-global-assign","no-unsafe-negation",{"desc":"236","fix":"237"},{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"242","fix":"243"},{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},{"desc":"250","fix":"251"},"Update the dependencies array to be: [areaSlug, getAccessTokenSilently, isAuthenticated, isLoading]",{"range":"252","text":"253"},"Update the dependencies array to be: [cragSlug, isLoading, isAuthenticated, getAccessTokenSilently]",{"range":"254","text":"255"},"Update the dependencies array to be: [isLoading, isAuthenticated, doGetCrags]",{"range":"256","text":"257"},"Update the dependencies array to be: [areaSlug, getAccessTokenSilently, isAuthenticated, topoSlug]",{"range":"258","text":"259"},"Update the dependencies array to be: [routeSlug, isAuthenticated, isLoading, getAccessTokenSilently, cragSlug, areaSlug, topoSlug]",{"range":"260","text":"261"},"Update the dependencies array to be: [joinedRoutePaths, routeLabels]",{"range":"262","text":"263"},"Update the dependencies array to be: [existingRoutes, routes]",{"range":"264","text":"265"},"Update the dependencies array to be: [isLoading, isAuthenticated, getAccessTokenSilently]",{"range":"266","text":"267"},[2016,2054],"[areaSlug, getAccessTokenSilently, isAuthenticated, isLoading]",[1803,1841],"[cragSlug, isLoading, isAuthenticated, getAccessTokenSilently]",[647,675],"[isLoading, isAuthenticated, doGetCrags]",[2373,2410],"[areaSlug, getAccessTokenSilently, isAuthenticated, topoSlug]",[1453,1492],"[routeSlug, isAuthenticated, isLoading, getAccessTokenSilently, cragSlug, areaSlug, topoSlug]",[1500,1518],"[joinedRoutePaths, routeLabels]",[1639,1647],"[existingRoutes, routes]",[916,944],"[isLoading, isAuthenticated, getAccessTokenSilently]"]